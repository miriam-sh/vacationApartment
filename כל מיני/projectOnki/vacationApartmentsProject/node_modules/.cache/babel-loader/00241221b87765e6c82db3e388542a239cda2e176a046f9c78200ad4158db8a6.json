{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D4\\u05E9\\u05DB\\u05E8\\u05EA \\u05D3\\u05D9\\u05E8\\u05D5\\u05EA\\\\vacationApartmentsProject\\\\src\\\\VacationApartment\\\\Components\\\\Aaa.jsx\",\n  _s = $RefreshSig$();\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst filter = createFilterOptions();\nexport default function FreeSoloCreateOptionDialog({\n  cities\n}) {\n  _s();\n  const [top100Films, setTop100Films] = useState([]);\n  const [city, setCity] = useState(null);\n\n  // if (cities)\n  //     cities.array.forEach((c) => {\n  //         console.log(c);\n  //         if (!top100Films.includes(c))\n  //             setTop100Films([...top100Films, c])\n  //     })\n\n  const saveNewCity = newValue => {\n    let newCity = {\n      name: newValue.inputValue,\n      _id: -1\n    };\n    setTop100Films([...top100Films, newCity]);\n    setCity(newValue.inputValue);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n      value: city,\n      onChange: (event, newValue) => {\n        if (typeof newValue === 'string') {\n          setTimeout(() => {\n            saveNewCity(newValue);\n          });\n        } else if (newValue && newValue.inputValue) {\n          saveNewCity(newValue);\n        } else {\n          setCity(newValue);\n        }\n      },\n      filterOptions: (options, params) => {\n        const filtered = filter(options, params);\n        if (params.inputValue !== '') {\n          filtered.push({\n            inputValue: params.inputValue,\n            name: `הוספת ${params.inputValue} לרשימה`\n          });\n        }\n        return filtered;\n      },\n      id: \"free-solo-dialog-demo\",\n      options: top100Films,\n      getOptionLabel: option => {\n        if (typeof option === 'string') {\n          return option;\n        }\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        return option.name;\n      },\n      selectOnFocus: true,\n      clearOnBlur: true,\n      handleHomeEndKeys: true,\n      renderOption: (props, option) => {\n        const {\n          key,\n          ...optionProps\n        } = props;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          ...optionProps,\n          children: option.name\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this);\n      },\n      sx: {\n        width: 300\n      },\n      freeSolo: true,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"\\u05E2\\u05D9\\u05E8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(FreeSoloCreateOptionDialog, \"cW5XuoTGkaq7PwMqFNnMeN+3wPU=\");\n_c = FreeSoloCreateOptionDialog;\nvar _c;\n$RefreshReg$(_c, \"FreeSoloCreateOptionDialog\");","map":{"version":3,"names":["TextField","Autocomplete","createFilterOptions","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","filter","FreeSoloCreateOptionDialog","cities","_s","top100Films","setTop100Films","city","setCity","saveNewCity","newValue","newCity","name","inputValue","_id","children","value","onChange","event","setTimeout","filterOptions","options","params","filtered","push","id","getOptionLabel","option","selectOnFocus","clearOnBlur","handleHomeEndKeys","renderOption","props","key","optionProps","fileName","_jsxFileName","lineNumber","columnNumber","sx","width","freeSolo","renderInput","label","_c","$RefreshReg$"],"sources":["D:/Node/פרוייקט השכרת דירות/vacationApartmentsProject/src/VacationApartment/Components/Aaa.jsx"],"sourcesContent":["import TextField from '@mui/material/TextField';\r\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport { useState } from 'react';\r\n\r\nconst filter = createFilterOptions();\r\n\r\nexport default function FreeSoloCreateOptionDialog({ cities }) {\r\n\r\n    const [top100Films, setTop100Films] = useState([]);\r\n    const [city, setCity] = useState(null);\r\n\r\n    // if (cities)\r\n    //     cities.array.forEach((c) => {\r\n    //         console.log(c);\r\n    //         if (!top100Films.includes(c))\r\n    //             setTop100Films([...top100Films, c])\r\n    //     })\r\n\r\n    const saveNewCity = (newValue) => {\r\n        let newCity = { name: newValue.inputValue, _id: -1 }\r\n        setTop100Films([...top100Films, newCity])\r\n        setCity(newValue.inputValue);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Autocomplete\r\n                value={city}\r\n                onChange={(event, newValue) => {\r\n                    if (typeof newValue === 'string') {\r\n                        setTimeout(() => {\r\n                            saveNewCity(newValue)\r\n                        });\r\n                    } else if (newValue && newValue.inputValue) {\r\n                        saveNewCity(newValue)\r\n                    } else {\r\n                        setCity(newValue);\r\n                    }\r\n                }}\r\n                filterOptions={(options, params) => {\r\n                    const filtered = filter(options, params);\r\n\r\n                    if (params.inputValue !== '') {\r\n                        filtered.push({\r\n                            inputValue: params.inputValue,\r\n                            name: `הוספת ${params.inputValue} לרשימה`,\r\n                        });\r\n                    }\r\n\r\n                    return filtered;\r\n                }}\r\n                id=\"free-solo-dialog-demo\"\r\n                options={top100Films}\r\n                getOptionLabel={(option) => {\r\n                    if (typeof option === 'string') {\r\n                        return option;\r\n                    }\r\n                    if (option.inputValue) {\r\n                        return option.inputValue;\r\n                    }\r\n                    return option.name;\r\n                }}\r\n                selectOnFocus\r\n                clearOnBlur\r\n                handleHomeEndKeys\r\n                renderOption={(props, option) => {\r\n                    const { key, ...optionProps } = props;\r\n                    return (\r\n                        <li key={key} {...optionProps}>\r\n                            {option.name}\r\n                        </li>\r\n                    );\r\n                }}\r\n                sx={{ width: 300 }}\r\n                freeSolo\r\n                renderInput={(params) => <TextField {...params} label=\"עיר\" />}\r\n            ></Autocomplete>\r\n        </>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}