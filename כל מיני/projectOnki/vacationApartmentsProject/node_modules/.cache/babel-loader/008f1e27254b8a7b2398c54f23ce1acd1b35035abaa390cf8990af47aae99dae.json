{"ast":null,"code":"import { produce } from 'immer';\nimport { Data } from './Data';\nimport { postCarModels } from '../ApiRequests/CarModel';\nimport { setCarModels, setCars, setDriveType, setRentals } from './Actions';\nimport { postDriveTypes, putDriveType, removeDriveType } from '../ApiRequests/DriveTypes';\nimport { postRentals, putRentalsReturned } from '../ApiRequests/Rentals';\nimport { postCars, putCarsAvailable } from '../ApiRequests/Cars';\nexport const Reducer = produce(_c = (state, action) => {\n  switch (action.type) {\n    case 'ADD_USER':\n      state.Users.push(action.payload);\n      break;\n    case 'ADD_CAR':\n      // state.Cars.push(action.payload)\n      postCars(action.payload.car).then(x => {\n        action.payload.dis(setCars(x.data));\n      }).catch(error => {\n        console.log(error.message);\n      });\n      break;\n    case 'UPDATE_CAR':\n      let carIndex = state.Cars.findIndex(p => p.id == action.payload.id);\n      state.Cars[carIndex] = action.payload.car;\n      break;\n    case 'ADD_LEND':\n      // state.Lends.push(action.payload)\n      postRentals(action.payload.lend).then(x => {\n        action.payload.dis(setRentals(x.data));\n        action.payload.messege(x.data[action.data.length - 1].id);\n      }).catch(error => {\n        console.log(error.message);\n      });\n      break;\n    case 'ADD_RETURN':\n      state.Returns.push(action.payload);\n      break;\n    case 'UPDATE_RETURN':\n      // let rentIndex = state.Lends.findIndex(r => r.id == action.payload)\n      // state.Lends[rentIndex].returned = true\n      putRentalsReturned(parseInt(action.payload.id)).then(x => {\n        action.payload.dis(setRentals(x.data));\n      }).catch(error => {\n        console.log(error.message);\n      });\n      break;\n    case 'UPDATE_CAR_AVAILABLE':\n      // let carIndex3 = state.Cars.findIndex(p => p.id == action.payload.id)\n      // state.Cars[carIndex3].available = action.payload.available\n      putCarsAvailable(parseInt(action.payload.id)).then(x => {\n        action.payload.dis(setca(x.data));\n      }).catch(error => {\n        console.log(error.message);\n      });\n      break;\n    case 'REMOVE_CAR':\n      let carIndex2 = state.Cars.findIndex(p => p.id == action.payload);\n      state.Cars.splice(carIndex2, 1);\n      break;\n    case 'UPDATE_DRIVE_TYPE_PRICE':\n      // let driveType = state.DriveTypes.find(p => p.id == action.payload.id)\n      // driveType.pricePerLiter = action.payload.newPrice\n      putDriveType(action.payload.id, action.payload.newPrice).then(x => {\n        action.payload.dis(setDriveType(x.data));\n      }).catch(error => {\n        console.log(error.message);\n      });\n      break;\n    case 'REMOVE_DRIVE_TYPE':\n      // let driveType1 = state.DriveTypes.findIndex(p => p.id == action.payload)\n      // state.DriveTypes.splice(driveType1, 1);\n      removeDriveType(action.payload.id).then(x => {\n        action.payload.dis(setDriveType(x.data));\n      }).catch(error => {\n        console.log(error.message);\n      });\n      break;\n    case 'SET_CURRENT_USER':\n      state.CurrentUser = action.payload;\n      sessionStorage.setItem(\"currentUser\", JSON.stringify(action.payload));\n      break;\n    case 'ADD_MODEL':\n      // state.CarModels.push(action.payload)\n      postCarModels(action.payload.model).then(x => {\n        action.payload.dis(setCarModels(x.data));\n      }).catch(error => {\n        console.log(error.message);\n      });\n      break;\n    case 'ADD_DRIVE_TYPE':\n      // state.DriveTypes.push(action.payload)\n      postDriveTypes(action.payload.driveType).then(x => {\n        action.payload.dis(setDriveType(x.data));\n      }).catch(error => {\n        console.log(error.message);\n      });\n      break;\n    case 'UPDATE_CAR_AVAILABLE':\n      let carIndex4 = state.Cars.findIndex(p => p.id == action.payload.id);\n      state.Cars[carIndex4].available = action.payload.available;\n      break;\n    case 'SET_CAR_MODEL':\n      state.CarModels = action.payload;\n      break;\n    case 'SET_CAR_TYPES':\n      state.CarTypes = action.payload;\n      break;\n    case 'SET_DRIVE_TYPES':\n      state.DriveTypes = action.payload;\n      break;\n    case 'SET_RENTALS':\n      state.Lends = action.payload;\n      break;\n    case 'SET_CARS':\n      state.Cars = action.payload;\n      break;\n    default:\n      break;\n  }\n}, Data);\n_c2 = Reducer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Reducer$produce\");\n$RefreshReg$(_c2, \"Reducer\");","map":{"version":3,"names":["produce","Data","postCarModels","setCarModels","setCars","setDriveType","setRentals","postDriveTypes","putDriveType","removeDriveType","postRentals","putRentalsReturned","postCars","putCarsAvailable","Reducer","_c","state","action","type","Users","push","payload","car","then","x","dis","data","catch","error","console","log","message","carIndex","Cars","findIndex","p","id","lend","messege","length","Returns","parseInt","setca","carIndex2","splice","newPrice","CurrentUser","sessionStorage","setItem","JSON","stringify","model","driveType","carIndex4","available","CarModels","CarTypes","DriveTypes","Lends","_c2","$RefreshReg$"],"sources":["D:/react/home-works-and-lessons/src/RentalCar/redux/Reducer.js"],"sourcesContent":["import { produce } from 'immer';\r\nimport { Data } from './Data';\r\nimport { postCarModels } from '../ApiRequests/CarModel';\r\nimport { setCarModels, setCars, setDriveType, setRentals } from './Actions';\r\nimport { postDriveTypes, putDriveType, removeDriveType } from '../ApiRequests/DriveTypes';\r\nimport { postRentals, putRentalsReturned } from '../ApiRequests/Rentals';\r\nimport { postCars, putCarsAvailable } from '../ApiRequests/Cars';\r\n\r\nexport const Reducer = produce((state, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'ADD_USER':\r\n            state.Users.push(action.payload)\r\n            break;\r\n        case 'ADD_CAR':\r\n            // state.Cars.push(action.payload)\r\n            postCars(action.payload.car)\r\n                .then(x => {\r\n                    action.payload.dis(setCars(x.data))\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.message);\r\n\r\n                })\r\n            break;\r\n        case 'UPDATE_CAR':\r\n            let carIndex = state.Cars.findIndex(p => p.id == action.payload.id)\r\n            state.Cars[carIndex] = action.payload.car\r\n            break;\r\n        case 'ADD_LEND':\r\n            // state.Lends.push(action.payload)\r\n            postRentals(action.payload.lend)\r\n                .then(x => {\r\n                    action.payload.dis(setRentals(x.data))\r\n                    action.payload.messege(x.data[action.data.length - 1].id)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.message);\r\n\r\n                })\r\n            break;\r\n        case 'ADD_RETURN':\r\n            state.Returns.push(action.payload)\r\n            break;\r\n        case 'UPDATE_RETURN':\r\n            // let rentIndex = state.Lends.findIndex(r => r.id == action.payload)\r\n            // state.Lends[rentIndex].returned = true\r\n            putRentalsReturned(parseInt(action.payload.id))\r\n                .then(x => {\r\n                    action.payload.dis(setRentals(x.data))\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.message);\r\n\r\n                })\r\n            break;\r\n        case 'UPDATE_CAR_AVAILABLE':\r\n            // let carIndex3 = state.Cars.findIndex(p => p.id == action.payload.id)\r\n            // state.Cars[carIndex3].available = action.payload.available\r\n            putCarsAvailable(parseInt(action.payload.id))\r\n                .then(x => {\r\n                    action.payload.dis(setca(x.data))\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.message);\r\n\r\n                })\r\n            break;\r\n        case 'REMOVE_CAR':\r\n            let carIndex2 = state.Cars.findIndex(p => p.id == action.payload)\r\n            state.Cars.splice(carIndex2, 1);\r\n            break;\r\n        case 'UPDATE_DRIVE_TYPE_PRICE':\r\n            // let driveType = state.DriveTypes.find(p => p.id == action.payload.id)\r\n            // driveType.pricePerLiter = action.payload.newPrice\r\n            putDriveType(action.payload.id, action.payload.newPrice)\r\n                .then(x => {\r\n                    action.payload.dis(setDriveType(x.data))\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.message);\r\n\r\n                })\r\n            break;\r\n        case 'REMOVE_DRIVE_TYPE':\r\n            // let driveType1 = state.DriveTypes.findIndex(p => p.id == action.payload)\r\n            // state.DriveTypes.splice(driveType1, 1);\r\n            removeDriveType(action.payload.id)\r\n                .then(x => {\r\n                    action.payload.dis(setDriveType(x.data))\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.message);\r\n\r\n                })\r\n            break\r\n        case 'SET_CURRENT_USER':\r\n            state.CurrentUser = action.payload\r\n            sessionStorage.setItem(\"currentUser\", JSON.stringify(action.payload))\r\n            break;\r\n        case 'ADD_MODEL':\r\n            // state.CarModels.push(action.payload)\r\n            postCarModels(action.payload.model)\r\n                .then(x => {\r\n                    action.payload.dis(setCarModels(x.data))\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.message);\r\n\r\n                })\r\n\r\n            break;\r\n        case 'ADD_DRIVE_TYPE':\r\n            // state.DriveTypes.push(action.payload)\r\n            postDriveTypes(action.payload.driveType)\r\n                .then(x => {\r\n                    action.payload.dis(setDriveType(x.data))\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.message);\r\n\r\n                })\r\n            break;\r\n        case 'UPDATE_CAR_AVAILABLE':\r\n            let carIndex4 = state.Cars.findIndex(p => p.id == action.payload.id)\r\n            state.Cars[carIndex4].available = action.payload.available\r\n            break;\r\n        case 'SET_CAR_MODEL':\r\n            state.CarModels = action.payload\r\n            break;\r\n        case 'SET_CAR_TYPES':\r\n            state.CarTypes = action.payload\r\n            break;\r\n        case 'SET_DRIVE_TYPES':\r\n            state.DriveTypes = action.payload\r\n            break;\r\n        case 'SET_RENTALS':\r\n            state.Lends = action.payload\r\n            break;\r\n        case 'SET_CARS':\r\n            state.Cars = action.payload\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n}, Data)"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}