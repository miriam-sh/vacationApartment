{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05D9\\u05E7\\u05D8 \\u05D4\\u05E9\\u05DB\\u05E8\\u05EA \\u05D3\\u05D9\\u05E8\\u05D5\\u05EA\\\\vacationApartmentsProject\\\\src\\\\VacationApartment\\\\Components\\\\inputs\\\\InputApartmentDetailes.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Table, TableCell, TableRow, TextField } from \"@mui/material\";\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport { useEffect, useRef, useState } from \"react\";\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport axios from \"axios\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CheckIcon from '@mui/icons-material/Check';\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst filter = createFilterOptions();\nexport const InputApartmentDetailes = ({\n  save = apartment => {\n    console.log(apartment);\n  },\n  nameDefault = null,\n  desciptionDefault = null,\n  categoryDefault = null,\n  cityDefault = null,\n  addressDefault = null,\n  countOfBedsDefault = null,\n  priceDefault = undefined,\n  pluginsDefault = []\n}) => {\n  _s();\n  const [plugins, setPlugins] = useState(pluginsDefault);\n  const [openPlugin, setOpenPlugin] = useState(false);\n  const pluginToAdd = useRef();\n  let [categories, setCategories] = useState([]);\n  let [cities, setCities] = useState([]);\n  const [city, setCity] = useState(null);\n  const saveNewCity = newValue => {\n    let newCity = {\n      name: newValue,\n      _id: -1\n    };\n    setCities([...cities, newCity]);\n    setCity(newCity);\n  };\n  const [category, setCategory] = useState(null);\n  const saveNewCategory = newValue => {\n    let newCategory = {\n      name: newValue,\n      _id: -1\n    };\n    setCategories([...categories, newCategory]);\n    setCategory(newCategory);\n  };\n  useEffect(() => {\n    axios.get(\"/city/all\").then(x => {\n      setCities(x.data);\n    }).catch(err => {\n      console.log(err.message);\n    });\n    axios.get(\"/category\").then(x => {\n      setCategories(x.data);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: async e => {\n        e.preventDefault();\n        if (!category || !city) {\n          Swal.fire({\n            title: !category ? \"הכנס קטגוריה\" : \"הכנס עיר\",\n            icon: \"error\",\n            timer: 700,\n            showConfirmButton: false\n          });\n          return;\n        }\n        let apartment = {\n          name: e.target[0].value,\n          desciption: e.target[2].value,\n          imgUrl: null,\n          category: category,\n          city: city,\n          address: e.target[10].value,\n          countOfBeds: e.target[12].value,\n          price: e.target[14].value,\n          plugins: plugins\n        };\n        if (apartment.category._id == -1) {\n          const response = await axios.post(\"/category\", {\n            name: apartment.category.name\n          });\n          apartment.category = response.data._id;\n        }\n        if (apartment.city._id == -1) {\n          const response = await axios.post(\"/city\", {\n            name: apartment.city.name\n          });\n          apartment.city = response.data._id;\n        }\n        save(apartment);\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"\\u05E9\\u05DD\",\n        variant: \"outlined\",\n        defaultValue: nameDefault\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"\\u05EA\\u05D9\\u05D0\\u05D5\\u05E8\",\n        variant: \"outlined\",\n        defaultValue: desciptionDefault\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        value: category\n        // defaultValue={categoryDefault}\n        ,\n        onChange: (event, newValue) => {\n          if (typeof newValue === 'string') {\n            setTimeout(() => {\n              saveNewCategory(newValue.inputValue);\n            });\n          } else if (newValue && newValue.inputValue) {\n            saveNewCategory(newValue.inputValue);\n          } else {\n            setCategory(newValue);\n          }\n        },\n        filterOptions: (options, params) => {\n          const filtered = filter(options, params);\n          if (params.inputValue !== '') {\n            filtered.push({\n              inputValue: params.inputValue,\n              name: `הוספת ${params.inputValue} לרשימה`\n            });\n          }\n          return filtered;\n        },\n        id: \"free-solo-dialog-demo1\",\n        options: categories,\n        getOptionLabel: option => {\n          if (typeof option === 'string') {\n            return option;\n          }\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n          return option.name;\n        },\n        selectOnFocus: true,\n        clearOnBlur: true,\n        handleHomeEndKeys: true,\n        renderOption: (props, option) => {\n          const {\n            key,\n            ...optionProps\n          } = props;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            ...optionProps,\n            children: option.name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this);\n        }\n        // sx={{ width: 300 }}\n        ,\n        freeSolo: true,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          label: \"\\u05E7\\u05D8\\u05D2\\u05D5\\u05E8\\u05D9\\u05D4 *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        value: city,\n        onChange: (event, newValue) => {\n          if (typeof newValue === 'string') {\n            setTimeout(() => {\n              saveNewCity(newValue.inputValue);\n            });\n          } else if (newValue && newValue.inputValue) {\n            saveNewCity(newValue.inputValue);\n          } else {\n            setCity(newValue);\n          }\n        },\n        filterOptions: (options, params) => {\n          const filtered = filter(options, params);\n          if (params.inputValue !== '') {\n            filtered.push({\n              inputValue: params.inputValue,\n              name: `הוספת ${params.inputValue} לרשימה`\n            });\n          }\n          return filtered;\n        },\n        id: \"free-solo-dialog-demo2\",\n        options: cities,\n        getOptionLabel: option => {\n          if (typeof option === 'string') {\n            return option;\n          }\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n          return option.name;\n        },\n        selectOnFocus: true,\n        clearOnBlur: true,\n        handleHomeEndKeys: true,\n        renderOption: (props, option) => {\n          const {\n            key,\n            ...optionProps\n          } = props;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            ...optionProps,\n            children: option.name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this);\n        }\n        // sx={{ width: 300 }}\n        ,\n        freeSolo: true,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          label: \"\\u05E2\\u05D9\\u05E8 *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"\\u05DB\\u05EA\\u05D5\\u05D1\\u05EA\",\n        variant: \"outlined\",\n        defaultValue: addressDefault\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        type: \"number\",\n        label: \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05DE\\u05D9\\u05D8\\u05D5\\u05EA\",\n        variant: \"outlined\",\n        defaultValue: countOfBedsDefault\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        type: \"number\",\n        label: \"\\u05DE\\u05D7\\u05D9\\u05E8\",\n        variant: \"outlined\",\n        defaultValue: priceDefault\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), (plugins.length > 0 || openPlugin) && /*#__PURE__*/_jsxDEV(Table, {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [plugins.map((p, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: p\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 67\n                }, this),\n                onClick: () => {\n                  setPlugins(prevPlugins => prevPlugins.filter((p, j) => j != i));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 48\n              }, this), \"                                    \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 33\n          }, this)), openPlugin && /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                ref: pluginToAdd\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 79\n                }, this),\n                onClick: () => {\n                  setPlugins([...plugins, pluginToAdd.current.children[0].children[0].value]);\n                  setOpenPlugin(false);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(AddBoxIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 36\n        }, this),\n        onClick: () => setOpenPlugin(true),\n        children: \"\\u05D4\\u05D5\\u05E1\\u05E4\\u05EA \\u05EA\\u05D5\\u05E1\\u05E3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 36\n        }, this),\n        className: \"inputTextField\",\n        id: \"submitInput\",\n        type: \"submit\",\n        variant: \"outlined\",\n        children: \"\\u05D4\\u05D5\\u05E1\\u05E4\\u05D4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(InputApartmentDetailes, \"Oz8t05dhu0LalKXeTrqrs3qetzI=\");\n_c = InputApartmentDetailes;\nvar _c;\n$RefreshReg$(_c, \"InputApartmentDetailes\");","map":{"version":3,"names":["Button","Table","TableCell","TableRow","TextField","AddCircleIcon","useEffect","useRef","useState","AddBoxIcon","axios","CloseIcon","Autocomplete","createFilterOptions","DeleteIcon","CheckIcon","Swal","jsxDEV","_jsxDEV","Fragment","_Fragment","filter","InputApartmentDetailes","save","apartment","console","log","nameDefault","desciptionDefault","categoryDefault","cityDefault","addressDefault","countOfBedsDefault","priceDefault","undefined","pluginsDefault","_s","plugins","setPlugins","openPlugin","setOpenPlugin","pluginToAdd","categories","setCategories","cities","setCities","city","setCity","saveNewCity","newValue","newCity","name","_id","category","setCategory","saveNewCategory","newCategory","get","then","x","data","catch","err","message","children","className","onSubmit","e","preventDefault","fire","title","icon","timer","showConfirmButton","target","value","desciption","imgUrl","address","countOfBeds","price","response","post","required","label","variant","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","onChange","event","setTimeout","inputValue","filterOptions","options","params","filtered","push","id","getOptionLabel","option","selectOnFocus","clearOnBlur","handleHomeEndKeys","renderOption","props","key","optionProps","freeSolo","renderInput","type","length","map","p","i","startIcon","onClick","prevPlugins","j","ref","current","_c","$RefreshReg$"],"sources":["D:/Node/פרוייקט השכרת דירות/vacationApartmentsProject/src/VacationApartment/Components/inputs/InputApartmentDetailes.jsx"],"sourcesContent":["import { Button, Table, TableCell, TableRow, TextField } from \"@mui/material\";\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport AddBoxIcon from '@mui/icons-material/AddBox';\r\nimport axios from \"axios\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst filter = createFilterOptions();\r\n\r\nexport const InputApartmentDetailes = ({\r\n    save = (apartment) => { console.log(apartment); },\r\n    nameDefault = null,\r\n    desciptionDefault = null,\r\n    categoryDefault = null,\r\n    cityDefault = null,\r\n    addressDefault = null,\r\n    countOfBedsDefault = null,\r\n    priceDefault = undefined,\r\n    pluginsDefault = []\r\n}) => {\r\n\r\n    const [plugins, setPlugins] = useState(pluginsDefault)\r\n\r\n    const [openPlugin, setOpenPlugin] = useState(false)\r\n\r\n    const pluginToAdd = useRef()\r\n\r\n    let [categories, setCategories] = useState([])\r\n\r\n    let [cities, setCities] = useState([])\r\n\r\n    const [city, setCity] = useState(null);\r\n\r\n    const saveNewCity = (newValue) => {\r\n        let newCity = { name: newValue, _id: -1 }\r\n        setCities([...cities, newCity])\r\n        setCity(newCity);\r\n    }\r\n\r\n    const [category, setCategory] = useState(null);\r\n\r\n    const saveNewCategory = (newValue) => {\r\n        let newCategory = { name: newValue, _id: -1 }\r\n        setCategories([...categories, newCategory])\r\n        setCategory(newCategory);\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(\"/city/all\")\r\n            .then((x) => {\r\n                setCities(x.data)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message);\r\n            })\r\n\r\n        axios.get(\"/category\")\r\n            .then((x) => {\r\n                setCategories(x.data)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message);\r\n            })\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <form className=\"form\" onSubmit={async (e) => {\r\n\r\n                e.preventDefault()\r\n\r\n                if (!category || !city) {\r\n                    Swal.fire({\r\n                        title: !category ? \"הכנס קטגוריה\" : \"הכנס עיר\",\r\n                        icon: \"error\",\r\n                        timer: 700,\r\n                        showConfirmButton: false\r\n                    })\r\n                    return\r\n                }\r\n\r\n                let apartment = {\r\n                    name: e.target[0].value,\r\n                    desciption: e.target[2].value,\r\n                    imgUrl: null,\r\n                    category: category,\r\n                    city: city,\r\n                    address: e.target[10].value,\r\n                    countOfBeds: e.target[12].value,\r\n                    price: e.target[14].value,\r\n                    plugins: plugins,\r\n                };\r\n\r\n                if (apartment.category._id == -1) {\r\n                    const response = await axios.post(\"/category\", { name: apartment.category.name });\r\n                    apartment.category = response.data._id;\r\n                }\r\n\r\n                if (apartment.city._id == -1) {\r\n                    const response = await axios.post(\"/city\", { name: apartment.city.name });\r\n                    apartment.city = response.data._id;\r\n                }\r\n\r\n                save(apartment);\r\n\r\n            }}>\r\n                <TextField required label=\"שם\" variant=\"outlined\" defaultValue={nameDefault}></TextField>\r\n                <TextField required label=\"תיאור\" variant=\"outlined\" defaultValue={desciptionDefault}></TextField>\r\n                {/* תמונה */}\r\n                <Autocomplete\r\n                    value={category}\r\n                    // defaultValue={categoryDefault}\r\n                    onChange={(event, newValue) => {\r\n                        if (typeof newValue === 'string') {\r\n                            setTimeout(() => {\r\n                                saveNewCategory(newValue.inputValue)\r\n                            });\r\n                        } else if (newValue && newValue.inputValue) {\r\n                            saveNewCategory(newValue.inputValue)\r\n                        } else {\r\n                            setCategory(newValue);\r\n                        }\r\n                    }}\r\n                    filterOptions={(options, params) => {\r\n                        const filtered = filter(options, params);\r\n\r\n                        if (params.inputValue !== '') {\r\n                            filtered.push({\r\n                                inputValue: params.inputValue,\r\n                                name: `הוספת ${params.inputValue} לרשימה`,\r\n                            });\r\n                        }\r\n\r\n                        return filtered;\r\n                    }}\r\n                    id=\"free-solo-dialog-demo1\"\r\n                    options={categories}\r\n                    getOptionLabel={(option) => {\r\n                        if (typeof option === 'string') {\r\n                            return option;\r\n                        }\r\n                        if (option.inputValue) {\r\n                            return option.inputValue;\r\n                        }\r\n                        return option.name;\r\n                    }}\r\n                    selectOnFocus\r\n                    clearOnBlur\r\n                    handleHomeEndKeys\r\n                    renderOption={(props, option) => {\r\n                        const { key, ...optionProps } = props;\r\n                        return (\r\n                            <li key={key} {...optionProps}>\r\n                                {option.name}\r\n                            </li>\r\n                        );\r\n                    }}\r\n                    // sx={{ width: 300 }}\r\n                    freeSolo\r\n                    renderInput={(params) => <TextField {...params} label=\"קטגוריה *\" />}\r\n                ></Autocomplete>\r\n                <Autocomplete\r\n                    value={city}\r\n                    onChange={(event, newValue) => {\r\n                        if (typeof newValue === 'string') {\r\n                            setTimeout(() => {\r\n                                saveNewCity(newValue.inputValue)\r\n                            });\r\n                        } else if (newValue && newValue.inputValue) {\r\n                            saveNewCity(newValue.inputValue)\r\n                        } else {\r\n                            setCity(newValue);\r\n                        }\r\n                    }}\r\n                    filterOptions={(options, params) => {\r\n                        const filtered = filter(options, params);\r\n\r\n                        if (params.inputValue !== '') {\r\n                            filtered.push({\r\n                                inputValue: params.inputValue,\r\n                                name: `הוספת ${params.inputValue} לרשימה`,\r\n                            });\r\n                        }\r\n\r\n                        return filtered;\r\n                    }}\r\n                    id=\"free-solo-dialog-demo2\"\r\n                    options={cities}\r\n                    getOptionLabel={(option) => {\r\n                        if (typeof option === 'string') {\r\n                            return option;\r\n                        }\r\n                        if (option.inputValue) {\r\n                            return option.inputValue;\r\n                        }\r\n                        return option.name;\r\n                    }}\r\n                    selectOnFocus\r\n                    clearOnBlur\r\n                    handleHomeEndKeys\r\n                    renderOption={(props, option) => {\r\n                        const { key, ...optionProps } = props;\r\n                        return (\r\n                            <li key={key} {...optionProps}>\r\n                                {option.name}\r\n                            </li>\r\n                        );\r\n                    }}\r\n                    // sx={{ width: 300 }}\r\n                    freeSolo\r\n                    renderInput={(params) => <TextField {...params} label=\"עיר *\" />}\r\n                ></Autocomplete>\r\n                <TextField required label=\"כתובת\" variant=\"outlined\" defaultValue={addressDefault}></TextField>\r\n                <TextField required type=\"number\" label=\"מספר מיטות\" variant=\"outlined\" defaultValue={countOfBedsDefault}></TextField>\r\n                <TextField required type=\"number\" label=\"מחיר\" variant=\"outlined\" defaultValue={priceDefault}></TextField>\r\n                {/* <p>{plugins.join(', ')}</p> */}\r\n                {(plugins.length > 0 || openPlugin) &&\r\n                    <Table>\r\n                        <tbody>\r\n                            {plugins.map((p, i) =>\r\n                                <TableRow>\r\n                                    <TableCell>{p}</TableCell>\r\n                                    <TableCell><Button startIcon={<DeleteIcon></DeleteIcon>} onClick={() => { setPlugins(prevPlugins => prevPlugins.filter((p, j) => j != i)) }}></Button>                                    </TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                            {openPlugin &&\r\n                                <TableRow>\r\n                                    <TableCell><TextField variant=\"outlined\" ref={pluginToAdd}></TextField></TableCell>\r\n                                    <TableCell>\r\n                                        <Button variant=\"outlined\" startIcon={<CheckIcon></CheckIcon>} onClick={() => {\r\n                                            setPlugins([...plugins, pluginToAdd.current.children[0].children[0].value])\r\n                                            setOpenPlugin(false)\r\n                                        }}></Button>\r\n                                    </TableCell>\r\n                                </TableRow>}\r\n                        </tbody>\r\n                    </Table>\r\n                }\r\n                <Button startIcon={<AddBoxIcon></AddBoxIcon>} onClick={() => setOpenPlugin(true)}>הוספת תוסף</Button>\r\n                <Button startIcon={<AddCircleIcon></AddCircleIcon>} className=\"inputTextField\" id=\"submitInput\" type=\"submit\" variant=\"outlined\">הוספה</Button>\r\n            </form >\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}