{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\home-works-and-lessons\\\\src\\\\RentalCar\\\\Components\\\\ManagerZone.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ManagerZone = () => {\n  _s();\n  let nav = useNavigate();\n  let user = useSelector(x => x.CurrentUser);\n  let userTypes = useSelector(x => x.UserTypes);\n  if (userTypes.find(t => t.id == user.userTypeId).description.equals(\"user\")) nav(\"/userZone\");\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"manager zone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"hello \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(ManagerZone, \"RD5yFdRlYxCjqrZ5IEVP3Snq4zU=\", false, function () {\n  return [useNavigate, useSelector, useSelector];\n});\n_c = ManagerZone;\nvar _c;\n$RefreshReg$(_c, \"ManagerZone\");","map":{"version":3,"names":["useSelector","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ManagerZone","_s","nav","user","x","CurrentUser","userTypes","UserTypes","find","t","id","userTypeId","description","equals","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["D:/react/home-works-and-lessons/src/RentalCar/Components/ManagerZone.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\"\r\nimport { useNavigate } from \"react-router\"\r\n\r\nexport const ManagerZone=()=>{\r\n\r\n    let nav = useNavigate()\r\n    let user = useSelector(x => x.CurrentUser)\r\n    let userTypes = useSelector(x => x.UserTypes)\r\n    if(userTypes.find(t => t.id == user.userTypeId).description.equals(\"user\"))\r\n        nav(\"/userZone\")\r\n\r\n    console.log(user)\r\n\r\n    return <>\r\n    <p>manager zone</p>\r\n    <p>hello {user.name}</p>\r\n    </>\r\n}"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,OAAO,MAAMC,WAAW,GAACA,CAAA,KAAI;EAAAC,EAAA;EAEzB,IAAIC,GAAG,GAAGP,WAAW,CAAC,CAAC;EACvB,IAAIQ,IAAI,GAAGT,WAAW,CAACU,CAAC,IAAIA,CAAC,CAACC,WAAW,CAAC;EAC1C,IAAIC,SAAS,GAAGZ,WAAW,CAACU,CAAC,IAAIA,CAAC,CAACG,SAAS,CAAC;EAC7C,IAAGD,SAAS,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,IAAIP,IAAI,CAACQ,UAAU,CAAC,CAACC,WAAW,CAACC,MAAM,CAAC,MAAM,CAAC,EACtEX,GAAG,CAAC,WAAW,CAAC;EAEpBY,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;EAEjB,oBAAON,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACPnB,OAAA;MAAAmB,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACnBvB,OAAA;MAAAmB,QAAA,GAAG,QAAM,EAACb,IAAI,CAACkB,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACtB,CAAC;AACP,CAAC;AAAAnB,EAAA,CAdYD,WAAW;EAAA,QAEVL,WAAW,EACVD,WAAW,EACNA,WAAW;AAAA;AAAA4B,EAAA,GAJlBtB,WAAW;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}